- name: Install base packages
  ansible.builtin.package:
    name:
      - apt-transport-https
      - build-essential
      - cmake
      - command-not-found
      - snapd
      - gpg
      - apt-transport-https
      - ca-certificates
      - python3-pip
      # cli tools
      - curl
      - fzf
      - git
      - cowsay
      - toilet
      - fortune
      - htop
      - jq
      - tree
      - wget
      - nmap
      - bat
      - exa
      - bash-completion
      - neofetch
      - rsync
      - tar
      - bzip2
      - zip

- name: Install snap packages
  community.general.snap:
    name:
      - yq
      - helm
      - kubectl

- name: Create some default user folders
  become_user: "{{ ansible_env.SUDO_USER }}"
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0755"
  loop:
    - "/home/{{ ansible_env.SUDO_USER }}/src"
    - "/home/{{ ansible_env.SUDO_USER }}/git"
    - "/home/{{ ansible_env.SUDO_USER }}/tmp"
    - "/home/{{ ansible_env.SUDO_USER }}/mnt"
    - "/home/{{ ansible_env.SUDO_USER }}/bin"
    - "/home/{{ ansible_env.SUDO_USER }}/apps"

# Oh-my-zsh
# install zsh
- name: Install base packages
  ansible.builtin.package:
    name: zsh
# change default shell to zsh
- name: Change default shell to zsh
  ansible.builtin.user:
    name: "{{ ansible_env.SUDO_USER }}"
    shell: /usr/bin/zsh
# install oh-my-zsh (before homeshick!)
- name: Install oh-my-zsh!!
  become_user: "{{ ansible_env.SUDO_USER }}"
  ansible.builtin.shell:
    cmd: sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
    creates: $HOME/.oh-my-zsh
- name: Install zsh-autosuggestions
  become_user: "{{ ansible_env.SUDO_USER }}"
  ansible.builtin.shell:
    cmd: git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/plugins/zsh-autosuggestions
    creates: $HOME/.oh-my-zsh/custom/plugins/zsh-autosuggestions

# Starship
- name: Install Starship
  ansible.builtin.shell:
    cmd: "curl -sS https://starship.rs/install.sh | sh -s -- --yes"
    creates: /usr/local/bin/starship

- name: Install FiraCode font
  ansible.builtin.package:
    name: fonts-firacode

# Homeshick
- name: Install Homeshick
  become_user: "{{ ansible_env.SUDO_USER }}"
  ansible.builtin.git:
    repo: https://github.com/andsens/homeshick.git
    dest: $HOME/.homesick/repos/homeshick

- name: Clone Homeshick dotfiles repo
  become_user: "{{ ansible_env.SUDO_USER }}"
  ansible.builtin.git:
    repo: git@github.com:bremme/dotfiles.git
    dest: $HOME/.homesick/repos/dotfiles

- name: Link Homeshick dotfiles
  become_user: "{{ ansible_env.SUDO_USER }}"
  ansible.builtin.shell:
    cmd: $HOME/.homesick/repos/homeshick/bin/homeshick link dotfiles --batch --force
    creates: $HOME/.link-dotfiles-has-run


# Docker
- name: Install Docker Debian
  tags: docker
  block:
    - name: Add Docker apt key
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/debian/gpg
        id: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88
        keyring: /etc/apt/trusted.gpg.d/docker.gpg
    - name: Add Docker repository
      ansible.builtin.apt_repository:
        # TODO get arch dynamicly e.g. $(dpkg --print-architecture)
        repo: "deb [arch=amd64 signed-by=/etc/apt/trusted.gpg.d/docker.gpg] https://download.docker.com/linux/debian {{ ansible_distribution_release }} stable"
        state: present
        filename: docker
    - name: Install Docker
      ansible.builtin.apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        update_cache: true
  when: ansible_distribution == "Debian"

- name: Add user to a docker group
  ansible.builtin.user:
    name: "{{ ansible_env.SUDO_USER }}"
    groups: docker
    append: true
